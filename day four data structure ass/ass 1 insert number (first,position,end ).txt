#include <iostream>
using namespace std;

// عملت تعريف لهيكل النود 
struct Node {
    int data;
    Node* next;
    Node* prev;

    Node(int value) : data(value), next(nullptr), prev(nullptr) {}
};

// تعريف الرأس والذيل
Node* head = nullptr;
Node* tail = nullptr;

// الاضافه فى البدايه 
void insertAtBeginning(int data) {
    Node* newNode = new Node(data);
    if (head == nullptr) { // إذا كانت القائمة فارغة
        head = tail = newNode;
    } else {
        newNode->next = head;
        head->prev = newNode;
        head = newNode;
    }
}

// الاضافه فى النهايه 
void insertAtEnd(int data) {
    Node* newNode = new Node(data);
    if (tail == nullptr) { // إذا كانت القائمة فارغة
        head = tail = newNode;
    } else {
        newNode->prev = tail;
        tail->next = newNode;
        tail = newNode;
    }
}

// الاضافه فى موقع محدد 
void insertAtPosition(int data, int position) {
    if (position == 0) { // إدراج في البداية
        insertAtBeginning(data);
        return;
    }

    Node* temp = head;
    for (int i = 0; i < position - 1 && temp != nullptr; i++) {
        temp = temp->next;
    }

    if (temp == nullptr) { // الموقع غير صالح
        cout << "Invalid position!" << endl;
        return;
    }

    Node* newNode = new Node(data);
    newNode->next = temp->next;
    newNode->prev = temp;

    if (temp->next != nullptr) { // هنا لو انا مضفتش عنصر فى النهايه 
        temp->next->prev = newNode;
    } else {
        tail = newNode; // تحديث الذيل إذا كانت في النهاية
    }

    temp->next = newNode;
}

// طباعه القائمه 
void printList() {
    Node* temp = head;
    while (temp != nullptr) {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

// طباعة القائمة بالعكس (من الذيل إلى الرأس)
void printListReverse() {
    Node* temp = tail;
    while (temp != nullptr) {
        cout << temp->data << " ";
        temp = temp->prev;
    }
    cout << endl;
}

// البرنامج الرئيسي
int main() {
    insertAtBeginning(10);
    insertAtBeginning(20);
    insertAtEnd(30);
    insertAtEnd(40);
    insertAtPosition(25, 2);

    cout << "List: ";
    printList();

    cout << "Reversed List: ";
    printListReverse();

    return 0;
}